
//Creating of Doubly linked list
//CREATING OF NODES (HEAD AND TAIL)
          head = null
          tail = null

//Method to set node as head
                  Prompt user for input (songs as input)
                  Get input

                  if (head == null) then
                      head = node
                      tail = node
                    return //insert before node method with input head and node

//Method to set node as tail
                  if (tail == null) then
                      set node as head method with input node
                      insert after node method with input tail and node

//Navigation of heads and tails with nodes
START
        Head -> previous = songName [count -1]
        Head -> next = pointer to head songName [count + 1]
END

//Adding and removing songs from playlist
START
            if (addSong == true) then
                set head [count] -> data to songName
                set head [count] -> pointer to head
                set head to song [count]
            print = “Song added to playlist” + songName
            count = count + 1
                else if (deleteSong == true) then
                    remove head -> songName
                    remove head -> pointer
                    print = “Song removed from playlist” + songName
                    count = count – 1
                end if
            end if
END

//Searching of songs in playlist
                  //Sorting of algorithm, then searching
                  //SORTING:
START
        i = left
        j = right
        x = a[right]
        int temp, size
        char charArray[] =str.toCharArray() // Convert the given string to a character array using the toCharAarray() method.

        Size= charArray.length
            for (int i = 0; i< size; i++)
            for (int j = i+1; j< size; j++)
                if (charArray[i]> charArray[j])
                    Temp= charArray[i]
                    charArray[i]= charArray[j][right]
                    charArray[j][right]= (char) temp
                    Arrays.sort(charArray)
            end sort
        // Sort the obtained array using the sort() method
        // Convert the sorted array to String by passing it to the constructor of the String array
END

                //SEARCHING:
START
        Int index
        Boolean Done
        Set index = 0
        Set done = false
            do
              if (index + length (substring) <= length (text)) then
              if (substring (text, index, length (substring)) == substring) then
                 Set done = true
                else
                 Set index = index + 1
                else
                 Set index = index – 1
                 Set done = true
             end if
           end if
            while not done
        end do
       return index
END



//Repeating of songs in playlist

START
        Boolean = repeat, string songName,
        do while (repeat songName == true)
                  play = songName
                  print = “ Play song on repeat? ”
                     if (endRepeat == true) then
                         Repeat = false
                            else
                         play = songName
                  end do
               end if
END
